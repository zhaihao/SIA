// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package sia.akka.remote

@SerialVersionUID(0L)
final case class MathOps(
    num: _root_.scala.Double = 0.0,
    op: sia.akka.remote.MathOps.Op = sia.akka.remote.MathOps.Op.Set
    ) extends scalapb.GeneratedMessage with scalapb.Message[MathOps] with scalapb.lenses.Updatable[MathOps] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = num
        if (__value != 0.0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeDoubleSize(1, __value)
        }
      };
      
      {
        val __value = op
        if (__value != sia.akka.remote.MathOps.Op.Set) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(2, __value.value)
        }
      };
      __size
    }
    final override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = num
        if (__v != 0.0) {
          _output__.writeDouble(1, __v)
        }
      };
      {
        val __v = op
        if (__v != sia.akka.remote.MathOps.Op.Set) {
          _output__.writeEnum(2, __v.value)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): sia.akka.remote.MathOps = {
      var __num = this.num
      var __op = this.op
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 9 =>
            __num = _input__.readDouble()
          case 16 =>
            __op = sia.akka.remote.MathOps.Op.fromValue(_input__.readEnum())
          case tag => _input__.skipField(tag)
        }
      }
      sia.akka.remote.MathOps(
          num = __num,
          op = __op
      )
    }
    def withNum(__v: _root_.scala.Double): MathOps = copy(num = __v)
    def withOp(__v: sia.akka.remote.MathOps.Op): MathOps = copy(op = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = num
          if (__t != 0.0) __t else null
        }
        case 2 => {
          val __t = op.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PDouble(num)
        case 2 => _root_.scalapb.descriptors.PEnum(op.scalaValueDescriptor)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = sia.akka.remote.MathOps
}

object MathOps extends scalapb.GeneratedMessageCompanion[sia.akka.remote.MathOps] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[sia.akka.remote.MathOps] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, _root_.scala.Any]): sia.akka.remote.MathOps = {
    _root_.scala.Predef.require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    sia.akka.remote.MathOps(
      __fieldsMap.getOrElse(__fields.get(0), 0.0).asInstanceOf[_root_.scala.Double],
      sia.akka.remote.MathOps.Op.fromValue(__fieldsMap.getOrElse(__fields.get(1), sia.akka.remote.MathOps.Op.Set.javaValueDescriptor).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber)
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[sia.akka.remote.MathOps] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      sia.akka.remote.MathOps(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Double]).getOrElse(0.0),
        sia.akka.remote.MathOps.Op.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(sia.akka.remote.MathOps.Op.Set.scalaValueDescriptor).number)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = CalculatorProto.javaDescriptor.getMessageTypes.get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = CalculatorProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 2 => sia.akka.remote.MathOps.Op
    }
  }
  lazy val defaultInstance = sia.akka.remote.MathOps(
  )
  sealed trait Op extends _root_.scalapb.GeneratedEnum {
    type EnumType = Op
    def isSet: _root_.scala.Boolean = false
    def isGet: _root_.scala.Boolean = false
    def isReset: _root_.scala.Boolean = false
    def isAdd: _root_.scala.Boolean = false
    def isSub: _root_.scala.Boolean = false
    def isMul: _root_.scala.Boolean = false
    def isDiv: _root_.scala.Boolean = false
    def companion: _root_.scalapb.GeneratedEnumCompanion[Op] = sia.akka.remote.MathOps.Op
  }
  
  object Op extends _root_.scalapb.GeneratedEnumCompanion[Op] {
    implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[Op] = this
    @SerialVersionUID(0L)
    case object Set extends Op {
      val value = 0
      val index = 0
      val name = "Set"
      override def isSet: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object Get extends Op {
      val value = 1
      val index = 1
      val name = "Get"
      override def isGet: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object Reset extends Op {
      val value = 2
      val index = 2
      val name = "Reset"
      override def isReset: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object Add extends Op {
      val value = 3
      val index = 3
      val name = "Add"
      override def isAdd: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object Sub extends Op {
      val value = 4
      val index = 4
      val name = "Sub"
      override def isSub: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object Mul extends Op {
      val value = 5
      val index = 5
      val name = "Mul"
      override def isMul: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object Div extends Op {
      val value = 6
      val index = 6
      val name = "Div"
      override def isDiv: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    final case class Unrecognized(value: _root_.scala.Int) extends Op with _root_.scalapb.UnrecognizedEnum
    
    lazy val values = scala.collection.immutable.Seq(Set, Get, Reset, Add, Sub, Mul, Div)
    def fromValue(value: _root_.scala.Int): Op = value match {
      case 0 => Set
      case 1 => Get
      case 2 => Reset
      case 3 => Add
      case 4 => Sub
      case 5 => Mul
      case 6 => Div
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = sia.akka.remote.MathOps.javaDescriptor.getEnumTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = sia.akka.remote.MathOps.scalaDescriptor.enums(0)
  }
  final val NUM_FIELD_NUMBER = 1
  final val OP_FIELD_NUMBER = 2
  def of(
    num: _root_.scala.Double,
    op: sia.akka.remote.MathOps.Op
  ): _root_.sia.akka.remote.MathOps = _root_.sia.akka.remote.MathOps(
    num,
    op
  )
}

object CalculatorProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    scalapb.options.ScalapbProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      sia.akka.remote.MathOps
    )
  private lazy val ProtoBytes: Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """ChBjYWxjdWxhdG9yLnByb3RvGhVzY2FsYXBiL3NjYWxhcGIucHJvdG8ikgEKB01hdGhPcHMSGgoDbnVtGAEgASgBQgjiPwUSA
  251bVIDbnVtEiQKAm9wGAIgASgOMgsuTWF0aE9wcy5PcEIH4j8EEgJvcFICb3AiRQoCT3ASBwoDU2V0EAASBwoDR2V0EAESCQoFU
  mVzZXQQAhIHCgNBZGQQAxIHCgNTdWIQBBIHCgNNdWwQBRIHCgNEaXYQBkIe4j8bCg9zaWEuYWtrYS5yZW1vdGUQASgBWABgAGgAY
  gZwcm90bzM="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, Array(
      scalapb.options.ScalapbProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}